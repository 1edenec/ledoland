# terminal emulator
super + Return
	$TERMINAL

#dropdown terminal
super + slash
	scratch scratch_tmux dropdowntmux

super + Escape
	$TERMINAL -e nvim ~/.config/sxhkd/sxhkdrc

# Programms
super + shift + y
	dunstify "System" "mpv is on his way...)" && \
	mpv $(xclip -o -selection primary)

super + {w,m,b}
	{firefox, \
	$TERMINAL -e ncmpcpp, \
	dmenubluetogle}

super + {_,shift} + l
	{i3lock-fancy, \
	brightControl toggle}

#calculator
super + {_,shift} + a
	{scratch scratch_bc dropdowncalc, \
	scratch_gui qalculate-gtk}


super + e
	scratch "scratch_vifm" "vifmrun"
super + shift + e
	scratch "scratch_pulse" "pulsemixer"

super + s
	$TERMINAL -e zsh -c 'vifm "$(find . -type d | fzf)";'

super + shift + g
	gimp

super + F{1-9,10,11,12}
	{ducksearch, \
	 bspc wm -r; notify-send "System" "BSPWM was restarted...",  \
	displayselect, \
	dmenupower, \
	tortgl, \
	dmenuqbnox, \
	td-toggle, \
	mailsync, \
	dmenumount, \
	dmenuumount, \
	ducksearch, \
	$TERMINAL -n Nmtui -e nmtui}

# screenshots
{_,alt} + Print
	{maimpick, \
	PICNAME=~/Pictures/Screen/"$(date '+%y%m%d-%H%M-%S').png" ; \
	maim -d 3 $PICNAME ; \
	sxiv $PICNAME}

super + Print
	dmenurecord
super + delete
	dmenurecord kill

# mpc
super + p
	mpcnotify toggle
super + {plus,minus}
	amixer sset Master {5%+,5%-}
super + {bracketleft,bracketright}
	{seek -20,seek +20}
super + {comma,period}
	mpcnotify {next,prev}

# dmenuscripts
super + grave
	dmenuunicode
super + Insert
	dmenugreenclip
#showclip
super + { ,shift} + d
	{dmenu_run,	dmenunvim}
super + x
	dmenugames
#
# fn keys
#

XF86MonBrightness{Down,Up}
	brightControl {down,up}

XF86Audio{Mute,LowerVolume,RaiseVolume}
	volControl {mute,down,up}

XF86TouchpadToggle
	touchpadtoggle

XF86WebCam
	camtoggle
#
# bspwm hotkeys
#

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + shift + m
	bspc desktop -l next ; \
	notify-send "WARNIGN" "Monocle watch!"

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + shift + t
	[ -z "$(bspc query -N -n focused.pseudo_tiled)" ] && \
	(bspc node focused -t pseudo_tiled ; dunstify -r 1204 "BSPWM" "Pseudo tiled") || \
    (bspc node focused -t tiled ; dunstify -r 1204 "BSPWM" "Tiled")

# toggle fullscreen
super + f
    [ -z "$(bspc query -N -n focused.fullscreen)" ] && \
	(bspc node focused -t fullscreen ; dunstify -r 1204 "BSPWM" "Fullscreened") || \
    (bspc node focused -t tiled ; dunstify -r 1204 "BSPWM" "Tiled")

# Toggle floating
super + t
	[ -z "$(bspc query -N -n focused.floating)" ] && \
	(bspc node focused -t floating ; dunstify -r 1204 "BSPWM" "Floated") || \
    (bspc node focused -t tiled ; dunstify -r 1204 "BSPWM" "Tiled")

# set the node flags
alt + {m,l,s,p}
	win_flags {marked,locked,sticky,private}
#
# focus/swap
#

# focus / move the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} ^{1-9,10}

# focus the last node/desktop
super + Tab
	bspc desktop -f last
# switch to next connected monitor
super + shift + grave
	bspc node --to-monitor next

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Right / left corner
super + shift + {b,n}
	hover {left,right}

# rotate desktop
super +{_,shift} + r
	bspc node @/ -R {90,270}

# mouse actions
super + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

# hide/unhide windows
super + v
	bspc node -g hidden
super + shift + v
	bspc node {,$(bspc query -N -n .hidden | tail -n1)} -g hidden=off




