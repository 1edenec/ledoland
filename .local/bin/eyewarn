#!/bin/bash
# a little script to check how long you are on PC
# give you a message about breake
# If window is in fullscreen mode, no message will appear.
icon="caffeine"
COMM="dunstify -i $icon -u critical"
HEADER='Take a break'
MESSAGE='Drink sneakers'

message(){
    $COMM "$HEADER" "$MESSAGE"
}

# find active window and monitor dimensions and monitor stat (according DPMS)
# if status different, then On, return off
# WINNAME needed to show notification on fre workspace
# If DESKTOP and WINDOW dimensions are equal, return "dont"
# If DESKTOP and WINDOW dimensions are NOT equal, return "show"
show(){
    DESKTOP="$(xdotool getdisplaygeometry | sed 's/\ /x/')"
    WINDOW="$(xdotool getwindowfocus getwindowgeometry | awk '$1 == "Geometry:" {print $2}')"
    WINNAME="$(xdotool getactivewindow getwindowname 2>/dev/null)"
    STAT="$(xset q | awk '$1 == "Monitor" {print $NF}')"
#echo "NAME=$WINNAME win=$WINDOW  $STAT top=$DESKTOP"  # debug

    if  [ "$STAT" == "On" ]
    then
        if  [ "$WINNAME" == "" ]
        then
            echo "show"
        else
            [ "$DESKTOP" != "$WINDOW" ] &&  echo "show" || echo "dont"
        fi
    else
        echo "off"
    fi
}

# When Display off, message will not be shown
displayoff(){
    while [ "$(show)" == "off" ]
    do
        sleep 60
    done
}

# When application fullscreened, message will not be shown
# Hovever, when screen will be returned to normal, message will be shown immediately
fullscreen(){
    while [ "$(show)" != "show" ]
    do
        sleep 60
    done
    message
}

# Message will be shown ecery 45 minutes
normal(){
    sleep 45m
    if [ "$(show)" == "show" ]
    then
        message
    fi
}

while :
do
    case "$(show)" in
        "show") normal ;;
        "dont") fullscreen ;;
        "off") displayoff ;;
        *) echo -e `date` "\nerror: $(show)" >> ~/.local/share/eyewarn.log;;
    esac
done
